# This script takes the JSON files that are generated as part of the BFDR IG and creates an output
# file with static URL strings for each StructureDefinition, Extension, and IG HTML page
#
# Usage: ruby scripts/generate_url_strings_from_BFDR_IG.rb <path-to-json-files> > projects/BFDR/URLs.cs
#
# If you need to generate the concept map JSON files, first install sushi (https://github.com/FHIR/sushi) then
#
#     git clone https://github.com/HL7/fhir-bfdr.git
#     cd fhir-bfdr
#     sushi
#
# The JSON files will be built in fhir-bfdr/fsh-generated/resources/

require 'json'
require 'erb'

path_to_ig = ARGV.shift
raise "Please provide a path to the IG JSON files" unless path_to_ig

# Load the Structure Definitions from the provided directory
structure_definition_files = Dir.glob("#{path_to_ig}/**/StructureDefinition*.json")
raise "No Structure Definitions Found" unless structure_definition_files.size > 0

# Iterate through each file and populate a hash of name => url
structure_definition_hash = {}
structure_definitions = structure_definition_files.each do |structure_definition_file|
  # Load and parse the JSON
  structure_definition = JSON.parse(File.read(structure_definition_file))
  # Grab the name and URL and populate the hash
  name = structure_definition['name']
  url = structure_definition['url']
  structure_definition_hash[name] = url
end

# Helper method to transform a StructureDefinition URL into a human-visitable link
# Note: Will need to be updated as IG moves through different publishing stages
def structure_definition_url_to_ig_url(url)
  # Transform this: http://hl7.org/fhir/us/vrdr/StructureDefinition/vrdr-decedent-education-level
  # Into this:      http://build.fhir.org/ig/HL7/vrdr/StructureDefinition-vrdr-decedent-education-level.html
  url.gsub('http://hl7.org/fhir/us/bfdr/StructureDefinition/', 'http://build.fhir.org/ig/HL7/bfdr/StructureDefinition-') + '.html'
end

# Helper method to determine whether a definition is an Extension or a Profile
def url_type(name)
  resource_types = %w{ Bundle Composition Condition Coverage Encounter Observation Patient Procedure }
  if resource_types.any? { |resource_type| name.start_with?(resource_type) } then 'profile' else 'extension' end
end

# Create a template for the output file

template = <<-EOT
// DO NOT EDIT MANUALLY! This file was generated by the script "<%= scriptname %>"

namespace BFDR
{
    /// <summary>Profile URLs</summary>
    public static class ProfileURL
    {
<% structure_definition_hash.select { |name, url| url_type(name) == 'profile' }.each do |name, url| -%>
        /// <summary>URL for <%= name %></summary>
        public const string <%= name %> = "<%= url %>";

<% end -%>
    }

    /// <summary>Extension URLs</summary>
    public static class ExtensionURL
    {
<% structure_definition_hash.select { |name, url| url_type(name) == 'extension' }.each do |name, url| -%>
        /// <summary>URL for <%= name %></summary>
        public const string <%= name %> = "<%= url %>";

<% end -%>
        /// <summary>URL for BirthSex</summary>
        public const string BirthSex = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex";

        /// <summary>URL for Plurality (multiple birth total)</summary>
        public const string Plurality = "http://hl7.org/fhir/StructureDefinition/patient-multipleBirthTotal";

        /// <summary>URL for Data Absent Reason</summary>
        public const string DataAbsentReason = "http://hl7.org/fhir/StructureDefinition/data-absent-reason";
    }

    /// <summary>IG URLs</summary>
    public static class IGURL
    {
<% structure_definition_hash.each do |name, url| -%>
        /// <summary>URL for <%= name %></summary>
        public const string <%= name %> = "<%= structure_definition_url_to_ig_url(url) %>";

<% end -%>
    }

    /// <summary>BFDR Custom Code System URLs</summary>
    public static class CodeSystemURL
    {
        /// <summary>URL for Abnormal Conditions of the Newborn Code System</summary>
        public const string AbnormalConditionsNewborn = "http://hl7.org/fhir/us/bfdr/CodeSystem/CodeSystem-abnormal-conditions-newborn";
    }

}
EOT

# Set up other variables that are used in the template above
scriptname = __FILE__

# Populate and print the template
puts ERB.new(template, nil, '-').result(binding)
